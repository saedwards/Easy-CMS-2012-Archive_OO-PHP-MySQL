{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17140\viewh12180\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 Other information\
- If conflict with require_once occurs, restart server!\
\
\
Setup Information\
\
- Create a new template for a Standard XHTML Page + Other page types\
	- label: Standard XHTML Page\
	- version: 1\
	Create new methods\
	- label: Title\
-----------------------------------------------------------------------------------------------------------------------------------------------\
\
\
Description and Values\
\
- cms_master\
	\
*** HANDLING ITEMS ********************************************************************************************************\
\
	- insert_composition_catalogue\
		NOTES\
		Holds references to every user defined insert (of components, templates and items) to create each page and page template.\
		Using composition not inheritance. UNIQUE INDEX constraint for guid and has_guid\
		- guid\
			VARCHAR(255) NOT NULL (ON UPDATE CASCADE, ON DELETE CASCADE) \
			references any guide from the components, data_templates and items tables\
		- has_guid\
			VARCHAR(255) NOT NULL (ON UPDATE CASCADE, ON DELETE CASCADE)\
		- layout_template_variable_variable\
			VARCHAR(255) DEFAULT NULL\
\
	- layout_types\
		NOTES\
		Lists all the layout presentation types available. The page will know which markup to use by the layout type requested.\
		- id\
			INT NOT NULL PRIMARY KEY\
		- label\
			TEXT description label\
\
	- layout_template_variables\
		NOTES\
		Lists all layout template variables registered with the CMS. Will typically be inserted with a new registered layout.\
		- variable \
			VARCHAR(255) NOT NULL PRIMARY KEY\
		- layout_template_id\
			INT NOT NULL FOREIGN KEY\
\
	- layout_templates\
		NOTES\
		Stores references to usable html templates.\
		- id\
			INT NOT NULL PRIMARY KEY\
		- label\
			TEXT description label\
		- directory\
			TEXT path reference to the HTML template (from html template folder root).\
\
	- layout_template_insert_options_catalogue\
		NOTES\
		Stores all available html template insert options for each item template.\
		- layout_template_id\
			INT NOT NULL reference to the layout template\
		- data_template_guid\
			VARCHAR(255) NOT NULL reference to the data template\
\
	- data_templates\
		NOTES\
		Stores the field types and other rules needed to create new item content.\
		- guid\
			VARCHAR(255) unique system hash.\
		- label\
			TEXT string description of data template only shown to the content editor and developer.\
		- parent\
			VARCHAR(255) unique system hash reference to parent data template (CANNOT REFERENCE ITSELF).\
		- layout_template_id\
			INT number of the layout template chosen for the template to edit items.\
		- product_layout_template_id\
			INT number of the layout template chosen to produce or edit the product (item or component) of this template.\
		- current_version\
			INT number of the current version of content being used.\
\
	- component_types\
		NOTES\
		Types of components you can create.\
		- id\
			INT NOT NULL PRIMARY KEY\
		- label\
			TEXT Description\
		- validation_definition\
			TEXT string reference to the custom validation class definition (PHP).\
		- construct_definition\
			TEXT string reference to the custom construct class definition (PHP) declaring rules that create the component.\
\
	- components_data_templates_catalogue\
		NOTES\
		Uses data_templates to create components and component templates. Lets you know which data templates are components.\
		- data_template_guid\
			VARCHAR(255)\
		- component_type_id\
			INT DEFAULT NULL Reference to the component_types table.\
\
	- items\
		NOTES\
		Stores all items and addressable content.\
		INSERTING\
			- as content editor create individual static items by adding, specifying field types and content on the fly.\
			- allow website users to create items by creating data templates.\
			- items can only display a layout if the data_template associated with them, has a layout specified (html template).\
		EDIT\
			- to edit an item, content developer specifies whether editable and use related template reference through the data_template_guid.\
		- guid\
			VARCHAR(255) unique system hash.\
		- label\
			TEXT string description of item only shown to the content editor.\
		- parent\
			VARCHAR(255) unique system hash reference to parent item (CANNOT REFERENCE ITSELF).\
		- data_template_guid\
			VARCHAR(255) unique system hash reference to source data template (CANNOT REFERENCE ITSELF) data_templates.guid.\
		- layout_template_id\
			INT NOT NULL chosen layout for item. FOREIGN KEY updates from layout_templates table\
		- current_version\
			INT number of the current version of content being used.\
\
	- field_types\
		NOTES\
		Stores custom field types used for validation/setup purposes to create items.\
		Also stores default field types for basic values.\
		- id\
			INT NOT NULL PRIMARY KEY\
		- label\
			TEXT string description of item only shown to the content editor and content developer.\
		- validation_definition\
			TEXT string reference to the custom validation class definition (PHP).\
\
	- item_field_catalogue\
		NOTES\
		Shows user defined relationship between items and field_types\
		- id\
			UNIQUE ID PRIMARY KEY AUTO INCREMENT\
		- Label\
			TEXT Description of field type for template that's not included in the field types list.\
		- field_type_id\
			INT NOT NULL FOREIGN KEY referencing the data_template_field_type_catalogue.id column\
		- item_guid\
			VARCHAR(255) string linked to foreign key value referencing the items.guid field and is the primary key for the row\
		- data_template_field_type_catalogue_id\
			DEFAULT NULL references a template field type catalogue row needed for editing the field\
	\
	- data_template_field_type_catalogue\
		NOTES\
		Shows user defined relationship between data templates and field_types\
		- id\
			UNIQUE ID PRIMARY KEY AUTO INCREMENT\
		- field_type_id\
			VARCHAR(255) FOREIGN KEY reference to the field_type.type column\
		- data_template_guid\
			VARCHAR(255) FOREIGN KEY value referencing the data_templates.guid field.\
		- version\
			INT NOT NULL show which version of the data_template this row belongs to.\
\
	- dates (+ any other basic data type) - data table\
		NOTES\
		Stores all date data for items. You can have multiple versions of the same item_guid target.\
		And unique identifier for the 'item_guid' and 'version' columns.\
		Rows will be removed when referencing deleted rows in the items table.\
		- item_field_catalogue_id\
			INT FOREIGN KEY integer linked to foreign key value referencing the items.guid field and is the primary key for the row\
		- value\
			DATE value nullable. Is the value changeable by a CMS user\
		- version\
			INT NOT NULL the version of this specific content item\
\
*** HANDLING ITEMS ********************************************************************************************************\
\
}